<UserControl x:Class="Pizza.MVVM.View.UserChild.UserMenuPage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Pizza.MVVM.View.UserChild"
             xmlns:viewModel ="clr-namespace:Pizza.MVVM.ViewModel.UserChild"
             xmlns:conventer="clr-namespace:Pizza.Services"
             xmlns:dto="clr-namespace:BLL.Model;assembly=BLL"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800" Background="White">
    <UserControl.DataContext>
        <viewModel:UserMenuView/>
    </UserControl.DataContext>
    <UserControl.Resources>
        
        <conventer:ImagePathToBitmapConverter x:Key="ImagePathToBitmapConverter"/>
        <conventer:InRangeConverter x:Key="InRangeConverter"></conventer:InRangeConverter>



        <CollectionViewSource x:Key="groupedMenu" Source="{Binding currentMenu}">
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="PizzaType" />
            </CollectionViewSource.GroupDescriptions>
        </CollectionViewSource>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />


        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border x:Name="rectangle"
                                SnapsToDevicePixels="True"
                                Background="DarkGray"
                                CornerRadius="3"
                                Height="{TemplateBinding Height}"
                                Width="{TemplateBinding Width}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
            <Setter Property="Width" Value="15"/>
            <Setter Property="Margin" Value="-14 0 0 0" />
            <Setter Property="MinWidth" Value="{Binding Width, RelativeSource={RelativeSource Self}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="Bg" SnapsToDevicePixels="true" Background="Transparent">
                            <Border Padding="0 4">
                                <Track x:Name="PART_Track"
                               IsDirectionReversed="true"
                               IsEnabled="{TemplateBinding IsMouseOver}"
                               Width="6"
                               HorizontalAlignment="Center">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Opacity="0" Command="{x:Static ScrollBar.PageUpCommand}" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Opacity="0" Command="{x:Static ScrollBar.PageDownCommand}" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource ScrollBarThumb}" />
                                    </Track.Thumb>
                                </Track>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="MinWidth" Value="0"/>
                    <Setter Property="Height" Value="14"/>
                    <Setter Property="MinHeight" Value="{Binding Height, RelativeSource={RelativeSource Self}}"/>
                    <Setter Property="Margin" Value="0 -14 0 0" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                    <Track x:Name="PART_Track"
                                    IsEnabled="{TemplateBinding IsMouseOver}"
                                    Height="6"
                                       >
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Opacity="0" Command="{x:Static ScrollBar.PageLeftCommand}"/>
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Opacity="0" Command="{x:Static ScrollBar.PageRightCommand}"/>
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb Style="{StaticResource ScrollBarThumb}" />
                                        </Track.Thumb>
                                    </Track>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type ScrollViewer}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>
                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
                            <ScrollBar x:Name="PART_VerticalScrollBar" 
                                   Opacity="0.4"
                                   AutomationProperties.AutomationId="VerticalScrollBar" 
                                   Cursor="Arrow" 
                                   Grid.Column="1"
                                   Maximum="{TemplateBinding ScrollableHeight}" 
                                   Minimum="0" 
                                   Grid.Row="0" 
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                   Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                   ViewportSize="{TemplateBinding ViewportHeight}"/>
                            <ScrollBar x:Name="PART_HorizontalScrollBar"
                                   Opacity="0.4"
                                   AutomationProperties.AutomationId="HorizontalScrollBar"
                                   Cursor="Arrow" 
                                   Grid.Column="0"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   Minimum="0" 
                                   Orientation="Horizontal"
                                   Grid.Row="1" 
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                   Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                   ViewportSize="{TemplateBinding ViewportWidth}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation To="1" Duration="0:0:0.3" Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity" />
                                        <DoubleAnimation To="1" Duration="0:0:0.3" Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation To="0.4" Duration="0:0:0.3" Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity" />
                                        <DoubleAnimation To="0.4" Duration="0:0:0.3" Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="comboboxBtn" TargetType="Button">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Background" Value="DarkGray"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" BorderThickness="0" BorderBrush="Black" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"></ContentPresenter>
                        </Border>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="PreviewMouseDown">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation Storyboard.TargetProperty="Margin"
                                                            Duration="0:0:0.100" To="2,2,0,0"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="PreviewMouseUp">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation Storyboard.TargetProperty="Margin"
                                                            Duration="0:0:0.100" To="0"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="comboboxList" TargetType="Button">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Background" Value="DarkGray"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontSize" Value="13"/>
            
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" BorderThickness="0" BorderBrush="Black" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" Margin="30,0,0,0"></ContentPresenter>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="LightGray"/>
                                <Setter Property="Foreground" Value="DarkBlue"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


    </UserControl.Resources>
    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <ListView Grid.Row="1" Name="LisViewMenu" ItemsSource="{Binding Source={StaticResource groupedMenu}}" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
          HorizontalContentAlignment="Center" BorderBrush="Transparent" BorderThickness="0"
                  VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.IsContainerVirtualizable="True" VirtualizingPanel.VirtualizationMode="Standard" VirtualizingPanel.CacheLength="10">
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <ContentPresenter />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Horizontal" HorizontalAlignment="Left"></WrapPanel>
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>
            <ListView.ItemTemplate>
                <DataTemplate>
                    <StackPanel Width="270" Margin="0 0 13 13">

                        <Grid Margin="0 0 0 6" Height="300" x:Name="gridBackground">
                            <Grid.Style>
                                <Style TargetType="Grid">
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <ImageBrush Stretch="Fill" ImageSource="{Binding Photo, Converter={StaticResource ImagePathToBitmapConverter}}" />
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsMouseOver, ElementName=btnInfo}" Value="True">
                                            <Setter Property="Background">
                                                <Setter.Value>
                                                    <ImageBrush ImageSource="/Images/mainform/menu/about.jpg" Stretch="Fill" Opacity="0.3"/>
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsMouseOver, ElementName=btnInfo}" Value="False">
                                            <Setter Property="Background">
                                                <Setter.Value>
                                                    <ImageBrush ImageSource="{Binding Photo, Converter={StaticResource ImagePathToBitmapConverter}}" Stretch="Fill"/>
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>

                            <!-- Круглая кнопка в правом верхнем углу -->
                            <Button x:Name="btnInfo"
                Tag="{StaticResource color4}"
                Width="30"
                Height="30"
                HorizontalAlignment="Right"
                VerticalAlignment="Top"
                Margin="0 5 5 0">
                                <Button.Template>
                                    <ControlTemplate>
                                        <Image Source="/Images/mainform/i.png" />
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                            <TextBlock Text="{Binding About}" TextWrapping="Wrap"  HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="14" FontWeight="Bold" Foreground="Black">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=btnInfo, Path=IsMouseOver}" Value="True">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                        <StackPanel Orientation="Vertical" VerticalAlignment="Center">

                            <TextBlock Text="{Binding Name}"
                       FontSize="24"
                       FontWeight="SemiBold"
                       TextAlignment="Center"
                       TextWrapping="Wrap"/>
                            <Grid>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock Text="{Binding Cost, StringFormat={}{0} Рублей.}"
                           FontSize="20"
                           FontWeight="SemiBold"
                           VerticalAlignment="Center"
                               Margin="5 0 0 0"/>
                                <Button x:Name="btnAddToCard"
        Tag="{StaticResource color4}"
        Command="{Binding Path=DataContext.IncreaseCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}"
        CommandParameter="{Binding}"
        Grid.Column="2"
        Width="50"
        HorizontalAlignment="Left"
        Margin="0 0 5 0">
                                    <Image Source="/Images/mainform/card.png"/>
                                    <Button.Style>
                                        <Style TargetType="Button" BasedOn="{StaticResource iconButton}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding count}" Value="0">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>

                                <Button x:Name="btnMinus" Grid.Column="0" VerticalAlignment="Center" 
        Width="26" Height="26" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
        HorizontalAlignment="Right" Margin="5 4 5 20"
        Command="{Binding Path=DataContext.DecreaseCommand, 
                          RelativeSource={RelativeSource Mode=FindAncestor, 
                                          AncestorType={x:Type UserControl}}}"
        CommandParameter="{Binding}">
                                    <Button.Style>
                                        <Style TargetType="Button" BasedOn="{StaticResource iconButton}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding count, Converter={StaticResource InRangeConverter}, ConverterParameter='1,99'}" Value="True">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                    <Button.Content>
                                        <TextBlock FontSize="26">-</TextBlock>
                                    </Button.Content>
                                </Button>

                                <Button x:Name="btnPlus" Grid.Column="2" VerticalAlignment="Center" Width="26" Height="26"
        HorizontalAlignment="Right" Margin="5 4 5 20" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
        Command="{Binding Path=DataContext.IncreaseCommand,
                RelativeSource={RelativeSource Mode=FindAncestor,
                AncestorType={x:Type UserControl}}}"
        CommandParameter="{Binding}">
                                    <Button.Style>
                                        <Style TargetType="Button" BasedOn="{StaticResource iconButton}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding count, Converter={StaticResource InRangeConverter}, ConverterParameter='1,98'}" Value="True">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                    <Button.Content>
                                        <TextBlock FontSize="26">+</TextBlock>
                                    </Button.Content>
                                </Button>

                                <TextBlock Grid.Column="1" Text="{Binding count}"
           VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="20">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding count, Converter={StaticResource InRangeConverter}, ConverterParameter='1,99'}" Value="True">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>




                            </Grid>
                        </StackPanel>
                    </StackPanel>
                </DataTemplate>
            </ListView.ItemTemplate>
            <ListView.GroupStyle>
                <GroupStyle>
                    <GroupStyle.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock FontWeight="Bold" FontSize="30" Margin="5" HorizontalAlignment="Left" FontFamily="Roboto" FontStretch="SemiCondensed" Text="{Binding Name}" />
                        </DataTemplate>
                    </GroupStyle.HeaderTemplate>
                </GroupStyle>
            </ListView.GroupStyle>


        </ListView>
        <Grid Grid.Row="0"> <!--тут грид кнопки-->
            <Border Name="borderFilter" Height="40" Width="60" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="8, 5, 0, 5"
                    CornerRadius="2" BorderThickness="1" Background="Black">
                <Border.Style>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="BorderBrush" Value="Black"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="DarkGray"/>
                            </Trigger>
                            <EventTrigger RoutedEvent="PreviewMouseDown">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color"
                                        Duration="0:0:0.100" To="Black">
                                        </ColorAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="PreviewMouseUp">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color"
                                        Duration="0:0:0.100" To="DarkGray">
                                        </ColorAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <Button Style="{StaticResource comboboxBtn}" Command="{Binding ToggleGridVisibilityCommand}" CommandParameter="{Binding ElementName=btnburger}">
                    <StackPanel Orientation="Horizontal">
                        <Image Height="32" Width="32" Margin="2 0 0 0">
                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Setter Property="Source" Value="/Images/mainform/btnFilter.png"/>
                                </Style>
                            </Image.Style>
                        </Image>
                        <Image Height="16" Width="16" Margin="3 2 0 0">
                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Setter Property="Source" Value="/Images/mainform/down.png"/>
                                </Style>
                            </Image.Style>
                        </Image>
                    </StackPanel>
                </Button>

            </Border>
            <Grid x:Name="btnburger" Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10, 50, 0 ,0" Visibility="Hidden">
                <Polygon Fill="DarkGray" StrokeThickness="1"
                Points=" 55, 10 ,47 ,0, 39,10" Stroke="DarkGray"/>
                <Grid Height="132" Width="190" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,10,0,0">
                    <StackPanel Orientation="Vertical">
                        <Button Style="{StaticResource comboboxList}" BorderThickness="2" BorderBrush="Black" Command="{Binding LoadAllMenuCommand}">
                            <TextBlock Text="Все меню"/>
                        </Button>
                        <ItemsControl ItemsSource="{Binding pizzaTypeList}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Button Style="{StaticResource comboboxList}" Content="{Binding PizzaType}" Command="{Binding DataContext.SelectPizzaTypeCommand, RelativeSource={RelativeSource AncestorType=ItemsControl}}" CommandParameter="{Binding}" />
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>

                    </StackPanel>
                </Grid>


            </Grid>
            <TextBlock Text="{Binding MenuText}" FontSize="14" Margin="75,17,0,0" HorizontalAlignment="Left" VerticalAlignment="Top">
            </TextBlock>

        </Grid>


    </Grid>
</UserControl>
